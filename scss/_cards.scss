.card {
  // Padding
  &-padded {
    padding: var(--card-padding, 1.5rem);

    &-sm {
      --card-padding: 1rem;
    }

    &-md {
      --card-padding: 1.5rem;
    }

    &-lg {
      --card-padding: 2rem;
    }

    &-xl {
      --card-padding: 3rem;
    }
  }

  // Mobile sizes here

  // Card shadow
  &-shadow {
    box-shadow: $shadow-default;
  }

  // Overlay gradients
  &-overlay-gradient {
    position: relative;

    .overlay-content {
      position: relative;
      z-index: 10;
    }

    .overlay-background {
      display: flex;
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: 1;
      pointer-events: none;
      border-radius: var(--border-radius, 0.75rem);
      overflow: hidden;

      img {
        user-select: none;
        width: 100%;
        height: 100%;
        object-fit: cover;
      }

      &::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: 2;
      }
    }

    @each $name, $colors in $gradients {
      &.gradient-#{$name} {
        background-color: map-get($colors, 'end');

        .overlay-background::before,
        .glowy-ghost::before {
          background-image: linear-gradient(
            var(--gradient-orientation, 120deg),
            rgba(map-get($colors, 'start'), 0.95),
            rgba(map-get($colors, 'end'), 0.8) 50%,
            rgba(map-get($colors, 'end'), 0.4)
          );
        }
      }
    }
  }

  // Glowy cards
  &-glowy {
    position: relative;
    z-index: 2;
    color: $white;

    .glowy-ghost {
      position: absolute;
      top: 4px;
      left: 0;
      right: 0;
      bottom: -4px;
      z-index: 0;
      filter: blur(14px) brightness(0.85);
      opacity: 0.75;

      &::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: -1;
      }
    }

    .glowy-image {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      width: 100%;
      height: 100%;
      z-index: -2;
      opacity: 0.5;
    }
  }

  // Imagres
  &-content > img {
    width: 100%;
  }

  // Lists
  &-content .card-list-divisions:not(:first-child) {
    border-top: 1px var(--gray-200) solid;
  }

  &-list {
    &-padded > * {
      padding: var(--card-padding, 1.5rem);
    }

    &-divisions {
      & > *:not(:last-child) {
        border-bottom: 1px var(--gray-200) solid;
      }
    }

    &-with-block-links :is(a, button) {
      display: block;
      padding: calc(var(--card-padding) / 2) var(--card-padding);
    }

    &-with-block-links button {
      appearance: none;
      background: transparent;
      font-family: inherit;
      width: 100%;
      border: 0;
      text-align: left;

      &:disabled {
        opacity: 0.5;
      }
    }

    &:last-child li:last-child :is(a, button) {
      border-bottom-left-radius: var(--border-radius);
      border-bottom-right-radius: var(--border-radius);
    }

    &:first-child li:first-child :is(a, button) {
      border-top-left-radius: var(--border-radius);
      border-top-right-radius: var(--border-radius);
    }

    &:not(.card-list-divisions).card-list-with-block-links :is(a, button) {
      color: var(--text-base);
      transition: .25s ease;
    
      &:hover:not(:disabled) {
        background: var(--gray-100);
        text-decoration: none;
      }

      &:focus {
        @include focus-shadow($primary);
        position: relative;
        z-index: 2;
      }
    }
  }

  // Tables
  &-content .table:not(:first-child) {
    border-top: 1px var(--gray-300) solid;
  }

  &-content .table:not(:last-child) {
    border-bottom: 1px var(--gray-300) solid;
  }

  & :is(h1, h2, h3, h4, h5, h6) {
    margin-top: 0;
    margin-bottom: 0;
  }
}

// Card links
a.card {
  display: block;
  transition: 0.25s ease;

  &:hover {
    color: inherit;
    text-decoration: none;
  }

  &.card-rises {
    &:hover {
      transform: translateY(-2%);
      box-shadow: $shadow-raised;
    }

    &:active {
      transform: translateY(1%);
      box-shadow: $shadow-default;
    }
  }
}
