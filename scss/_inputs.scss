// Text input
.input {
  appearance: none;
  background: var(--input-background-color, var(--white));
  font-family: inherit;
  font-size: inherit;
  padding: var(--input-padding-y) var(--input-padding-x);
  color: var(--text-color);
  line-height: 1.5;
  min-height: calc(1.5em + calc(var(--input-padding-y) * 2) + 4px);

  &-sm {
    --input-padding-x: 0.5rem;
    --input-padding-y: 0.25rem;
  }

  &-md {
    --input-padding-x: 0.75rem;
    --input-padding-y: 0.5rem;
  }

  &-lg {
    --input-padding-x: 1rem;
    --input-padding-y: 0.75rem;
  }

  &-label {
    display: block;
    font-size: $text-sm;
  }

  &-default {
    .input-label {
      margin-bottom: 0.25rem;
    }

    .input {
      border: 2px var(--input-border-color, var(--gray-200)) solid;
      border-radius: var(--input-border-radius, #{$border-radius-xs});

      &:disabled {
        color: var(--gray-600);
        background: var(--gray-100);
      }

      &:focus {
        border-color: $primary;
        outline: 0;
        @include focus-shadow($primary);
      }

      &-focus-dark:focus {
        border-color: $gray-700;
        @include focus-shadow($black);
      }

      @at-root .dark .input-focus-dark:focus {
        @include focus-shadow(darken($gray-1000, 15%));
      }
    }
  }

  &-float {
    position: relative;

    .input {
      border: 0;
      font-size: 1.25rem;
      padding: 2rem 1.25rem 0.75rem;

      &:disabled {
        color: var(--text-muted);
        background: var(--gray-100);
      }

      &:focus {
        outline: 0;
      }

      &-label {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        left: 1.25rem;
        font-size: 1.25rem;
        color: var(--text-muted);
        pointer-events: none;
        transition: 0.25s ease;
        z-index: 10;
      }
    }

    &.input-has-value {
      .input-label {
        font-size: $text-sm;
        transform: translateY(calc(-50% - 1rem));
      }
    }
  }

  &-has-errors {
    .input-label,
    .field-errors {
      color: $red;
    }

    &.input-default .input {
      border-color: $red;

      &:focus {
        @include focus-shadow($red);
      }
    }

    &.input-float {
      .input {
        padding: 1.2rem 1.25rem 1.55rem;
      }

      .input-label {
        font-size: $text-sm;
        transform: translateY(calc(-50% - 1.35rem));
      }

      .field-errors {
        position: absolute;
        bottom: 0.35rem;
        left: 1.25rem;
        right: 1.25rem;
        background: $red;
        color: $white;
        border-radius: 0.25rem;
        padding: 0.2rem 0.3rem;
        margin-left: -0.3rem;
        line-height: 1;
        display: -webkit-box;
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
        overflow: hidden;
        z-index: 10;
      }
    }
  }
}

// Input card
.input-card {
  &-legend {
    font-weight: 900;
    font-size: $text-2xl;
    letter-spacing: -0.02em;
  }

  .card-content {
    display: grid;
    background: var(--gray-300);
    gap: 1px;
    grid-template-columns: repeat(4, 1fr);
  }
}

// Radio group
.radio-group {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem 1rem;

  .radio-field.card {
    position: relative;
    transition: transform 0.25s ease, box-shadow 0.25s ease;

    &:hover:not(.disabled) {
      transform: translateY(-5%);
      box-shadow: var(--shadow-raised);
    }

    &:active:not(.disabled) {
      transform: translateY(2.5%);
    }

    &:focus-within:not(.disabled):not(.focus-dark-within) {
      @include focus-shadow($primary);
    }

    &.selected {
      background: $gradient;
      color: $white;
    }

    &.disabled {
      opacity: 0.5;
    }
  }

  &-legend {
    width: 100%;
    flex-grow: 1;
    flex-shrink: 0;
    font-weight: 900;
    font-size: $text-2xl;
    letter-spacing: -0.02em;
    margin: 0;
  }
}

.input-field-with-slot {
  background: var(--white);
  padding: 0.75rem 1.25rem;
}

// Select
.select-with-chevron {
  position: relative;

  .select {
    padding-right: 2.5rem;
  }

  .select-icon {
    position: absolute;
    right: 1rem;
    top: 50%;
    transform: translateY(-50%);
    width: 1em;
    height: 1em;
    pointer-events: none;
    color: var(--gray-600);
    z-index: 2;
  }
}

.select-field.input-float {
  background: var(--white);
}

// Input appends
.input-append {
  display: flex;
  align-items: stretch;

  & > *:not(:first-child):not(:last-child),
  & > *:not(:first-child):not(:last-child) :is(.input, .button) {
    border-radius: 0;
  }

  & > *:first-child,
  & > *:first-child :is(.input, .button) {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  & > *:last-child,
  & > *:last-child :is(.input, .button) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  &-first {
    border-top-left-radius: var(
      --input-border-radius,
      var(--button-border-radius)
    ) !important;
    border-bottom-left-radius: var(
      --input-border-radius,
      var(--button-border-radius)
    ) !important;
  }

  &-last {
    border-top-right-radius: var(
      --input-border-radius,
      var(--button-border-radius)
    ) !important;
    border-bottom-right-radius: var(
      --input-border-radius,
      var(--button-border-radius)
    ) !important;
  }
}

// Border color
.input-border-default {
  --input-border-color: var(--gray-200);
}

.input-border-supermuted {
  --input-border-color: var(--gray-100);
}

.input-border-muted {
  --input-border-color: var(--gray-400);
}

.input-border-outline {
  --input-border-color: var(--white);
  --input-background-color: transparent;

  .select-icon {
    color: var(--white);
  }
}

// Input focus
.input:focus {
  position: relative;
  z-index: 2;
}

// Autocomplete background color
.input-float {
  input:-webkit-autofill,
  input:-webkit-autofill:hover,
  input:-webkit-autofill:focus,
  input:-webkit-autofill:active {
    -webkit-box-shadow: 0 0 0 100px mix($yellow, $white, 20%) inset !important;
  }
}
