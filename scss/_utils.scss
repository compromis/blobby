// Backgrounds
@each $name, $colors in $backgrounds {
  .bg-#{$name} {
    background: map-get($colors, 'bg');
    color: map-get($colors, 'text');
  }
}

// Text sizes
@each $name, $size in $text-sizes {
  .text-#{$name} {
    font-size: var(--text-#{$name}, #{$size}) !important;
  }
}

@include media-breakpoint-down(sm) {
  :root {
    --text-2xl: #{$text-2xl - ($text-2xl * 0.175)};
    --text-3xl: #{$text-3xl - ($text-3xl * 0.2)};
    --text-4xl: #{$text-4xl - ($text-4xl * 0.25)};
    --text-5xl: #{$text-5xl - ($text-5xl * 0.25)};
    --text-6xl: #{$text-6xl - ($text-6xl * 0.25)};
    --text-7xl: #{$text-7xl - ($text-7xl * 0.25)};
  }
}

// Text colors
@each $name, $color in $text-colors {
  .text-#{$name} {
    color: $color;
  }
}

// Gradients
@each $name, $colors in $gradients {
  .gradient-#{$name} {
    --gradient-start: #{map-get($colors, 'start')};
    --gradient-end: #{map-get($colors, 'end')};
  }
}

// Shadows
.shadow {
  box-shadow: var(--shadow-default);

  &-rises {
    transition: 0.25s ease;

    &:hover {
      box-shadow: var(--shadow-raised);
      translate: translateY(-0.5rem);
    }

    &:active {
      translate: translateY(-0.5rem);
    }
  }
}

// Rounded
@each $name, $size in $border-radii {
  .rounded-#{$name} {
    --border-radius: #{$size};
    border-radius: var(--border-radius);
  }
}

// Links
.link-muted-to-black {
  color: var(--text-muted) !important;
  transition: 0.2s ease;

  &:hover {
    color: var(--text-color) !important;
  }
}

.link-muted-to-primary {
  color: var(--text-muted) !important;
  transition: 0.2s ease;

  &:hover {
    color: var(--primary) !important;
  }
}

.link-default-to-primary {
  color: var(--text-base) !important;
  transition: 0.2s ease;

  &:hover {
    color: var(--primary) !important;
  }
}

.link-default-to-gradient {
  color: var(--text-base) !important;

  &:hover {
    @include gradient-text($gradient);
  }
}

.link-white {
  color: $white !important;

  &:hover {
    opacity: 0.75;
  }
}

.link-underlined {
  text-decoration: underline;
}

.link-not-underlined {
  text-decoration: none;

  &:hover {
    text-decoration: none;
  }
}

.link-to-underlined {
  text-decoration: none;

  &:hover {
    text-decoration: underline;
  }
}

// Lists
.list-reset {
  margin: 0;
  padding: 0;
  list-style: none;
}

.list-horizontal {
  display: flex;
  flex-wrap: wrap;
}

.list-social-icons {
  justify-content: space-evenly;

  a {
    display: block;
    transition: color 0.15s ease-in-out;
  }

  @each $name, $color in $social-networks {
    .#{$name} a:hover {
      color: $color;
    }
  }
}

// Gradient text
.text-gradient {
  @include gradient-text($gradient);
}

// Grid
@for $i from 1 through 4 {
  .span-#{$i} {
    grid-column: span #{$i} / span #{$i};
  }
}

@include media-breakpoint-down(md) {
  @for $i from 1 through 4 {
    .md\:span-#{$i} {
      grid-column: span #{$i} / span #{$i};
    }
  }
}

@include media-breakpoint-down(sm) {
  @for $i from 1 through 4 {
    .sm\:span-#{$i} {
      grid-column: span #{$i} / span #{$i};
    }
  }
}

// Borders
.border-top {
  border-top: 1px solid var(--border-color, var(--gray-200)) !important;
}

.border-bottom {
  border-bottom: 1px solid var(--border-color, var(--gray-200)) !important;
}

.border-right {
  border-right: 1px solid var(--border-color, var(--gray-200)) !important;
}

.border-left {
  border-left: 1px solid var(--border-color, var(--gray-200)) !important;
}

.border {
  border: 1px solid var(--border-color, var(--gray-200)) !important;
}

.border-outline {
  --border-color: var(--gray-300);
}

.border-white {
  --border-color: #{$white};
}

.border-black {
  --border-color: #{$black};
}

// Text
.text-bold {
  font-weight: 900;
}

.text-regular {
  font-weight: 500;
}

.text-sans-serif {
  font-family: $font-family-sans-serif;
}

// Focus
.focus-primary:focus {
  @include focus-shadow($primary);
}

.focus-primary-within:focus-within {
  @include focus-shadow($primary);
}

.focus-dark:focus {
  @include focus-shadow($black);
}

.focus-dark-within:focus-within {
  @include focus-shadow($black);
}

@at-root .dark .focus-dark:focus {
  @include focus-shadow(darken($gray-1000, 15%));
}

@at-root .dark .focus-dark-within:focus-within {
  @include focus-shadow(darken($gray-1000, 15%));
}
