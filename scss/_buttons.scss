.button {
  appearance: none;
  border: none;
  background: none;
  padding: 0.6em 1.5em;
  border-radius: var(--b-border-radius, #{$border-radius-sm});

  //Variants (Colors)
  &-default {
    --b-button-color: var(--b-white);
  }

  &-inverted {
    --b-button-color: var(--b-black);
    color: var(--b-white);
  }

  &-primary {
    --b-button-color: #{$gradient};
    color: $white;
  }

  &-secondary {
    --b-button-color: #{$gradient-secondary};
    color: $white;
  }

  &-muted {
    --b-button-color: var(--b-gray-400);
    color: var(--b-white);
  }

  &-supermuted {
    --b-button-color: var(--b-gray-100);
    color: var(--b-gray-700);
  }

  //Types
  &-solid {
    background: var(--b-button-color);
    transition: 0.25s ease;

    &.button-default {
      color: var(--b-black);
    }

    &.button-inverted:hover,
    &.button-muted:hover,
    &.button-primary:hover,
    &.button-secondary:hover {
      color: var(--b-white);
    }

    &.button-supermuted:hover {
      color: var(--b-black);
    }
  }

  &-outline {
    border-width: 2px;
    border-color: var(--b-button-color);
    border-style: solid;
    color: var(--b-button-color);
    transition: 0.25s ease;

    &.button-supermuted,
    &.button-muted {
      color: var(--b-gray-700);
    }

    &.button-primary,
    &.button-secondary {
      border-color: transparent;
      background: linear-gradient(var(--b-white), var(--b-white)) padding-box,
        var(--b-button-color) border-box;

      span {
        background: var(--b-button-color);
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
      }

      &:hover:not(:disabled) {
        background: var(--b-button-color) padding-box,
          var(--b-button-color) border-box;

        span {
          background: $white;
          -webkit-background-clip: text;
          background-clip: text;
        }

        svg {
          color: $white;
        }
      }
    }

    &.button-primary svg {
      color: $gradient-primary-start;
    }

    &.button-secondary svg {
      color: $gradient-secondary-start;
    }

    &:hover:not(:disabled) {
      background: var(--b-button-color);
      color: $white;
    }

    &.button-default:hover:not(:disabled) {
      color: var(--b-black);
    }

    &.button-inverted:hover:not(:disabled) {
      color: var(--b-white);
    }

    &.button-supermuted:hover:not(:disabled) {
      color: var(--b-black);
      background: var(--b-white);
      border-color: var(--b-white);
    }
  }

  //Shadow
  &-has-shadow {
    &.button-solid {
      box-shadow: $shadow-default;
    }

    &:hover:not(:disabled) {
      box-shadow: $shadow-raised;
      transform: translateY(-4%);
    }
  }

  //Sizes
  &-sm {
    --border-radius: #{$border-radius-xs};
  }

  &-md {
    --border-radius: #{$border-radius-sm};
  }

  &-lg {
    --border-radius: #{$border-radius-sm};
  }

  &-xl {
    --border-radius: #{$border-radius-md};
    padding: 1.25rem calc(1.5rem + 3vw);
  }

  //Hover
  &:hover:not(:disabled) {
    text-decoration: none;
  }

  //Focus
  &:focus {
    @include focus-shadow($primary);
  }

  &-secondary:focus {
    @include focus-shadow($gradient-secondary-start);
  }

  &-primary:focus {
    @include focus-shadow($primary);
  }

  &:disabled {
    opacity: 0.5;
  }
}

a.button {
  display: inline-block;
}
